#!/usr/bin/env node
import fs                           from 'fs'
import walk                         from 'walk'
import Mocha                        from 'mocha'
import path                         from 'path'
import minimist                     from 'minimist'
import { kernel, bundleManager }    from './../../bootstrap.js'

let argv = minimist( process.argv.slice( 2 ) )

const container                 = bundleManager.container
const cli                       = container.getComponent( 'Console' )
const servicesTestsDirectory    = kernel.path.test.services

/*
 * Instantiate a Mocha instance
 */
const mocha = new Mocha()

/*
 * Expose container into global scope for unit tests classes, because file are called by mocha and not ourselves
 */
global.container = container

/*
 * Add each .js file to the mocha instance
 */
let walker = walk.walk( servicesTestsDirectory )

walker.on( "names", ( root, nodeNamesArray ) => {
    nodeNamesArray.sort( ( a, b ) => {
        if ( a > b ) return 1
        if ( a < b ) return -1
        return 0
    })
})

walker.on( "directories", ( root, dirStatsArray, next ) => {
    next()
})

 walker.on( "file", ( root, fileStats, next ) => {
    mocha.addFile(
        path.join( root, fileStats.name )
    )

    next()
})

walker.on( "errors", ( root, nodeStatsArray, next ) => {
    next()
})

walker.on( "end", () => {
    /*
     * Run the tests
     */
    mocha.run( failures => {
        if ( failures ) {
            cli.warn( failures  + ' failures occurs during tests.' )
        }
        process.exit()
    })
})
