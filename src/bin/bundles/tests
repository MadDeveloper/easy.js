#!/usr/bin/env node
import fs           from 'fs'
import walk         from 'walk'
import Mocha        from 'mocha'
import path         from 'path'
import readlineSync from 'readline-sync'
import _            from 'lodash'
import minimist     from 'minimist'
import config       from './../../config/config'
import App          from './../../bootstrap.js'

let argv    = minimist( process.argv.slice( 2 ) )
let cliMode = true

const app                   = new App( config, cliMode )
const kernel                = app.kernel
const bundleManager         = app.bundleManager
const container             = bundleManager.container
const message               = container.getComponent( 'Message' )

/*
 * Instantiate a Mocha instance
 */
const mocha = new Mocha()

const bundlesDirectory = kernel.path.bundles

/*
 * Expose container into global scope for unit tests classes, because file are called by mocha and not ourselves
 */
global.container = container

/*
 * Add each .js file to the mocha instance
 */
fs.readdirSync( bundlesDirectory )
    .forEach( bundle => {
        const testsDir = bundlesDirectory + '/' + bundle + '/tests'

        try {
            if ( fs.lstatSync( testsDir ).isDirectory() ) {
                const files = fs.readdirSync( testsDir )

                if ( files && files.length > 0 ) {
                    files.forEach( file => {
                        mocha.addFile(
                            path.join( testsDir, file )
                        )
                    })
                }
            }
        } catch( e ) {
            message.warn( 'No unit tests found for ' + bundle + ' bundle.' )
        }
    })

/*
 * Run the tests
 */
mocha.run( failures => {
    if ( failures ) {
        message.warn( failures  + ' failures occurs during tests.' )
    }
    process.exit()
})
