#!/usr/bin/env node
import execsql          		from 'execsql'
import schema					from '~/config/database/schema'
import sequence 				from 'when/sequence'
import Console          		from '~/vendor/easy/core/Console'
import { indexOf,
		 has,
		 keys,
		 map }					from 'lodash'
import { kernel, application }	from '~/bootstrap'

const schemaDatabaseService	= container.getService( 'database.schema' )
const knex					= schemaDatabaseService.knex

const titleError		= "Error when initializing roles and users"
const consequenceError	= "Initialization aborted."

function raiseError( error ) {
	Console.error({
		title: titleError,
		message: error,
		consequence: consequenceError,
		exit: 0
	})
}

function dropTables() {
    let tables 		= []
    let tableNames	= keys( schema )

    // we need to reverse tables schema, to delete in first table which contains fk and not the parents, otherwise error will occur because of fk.
    tableNames.reverse()
    tables = map( tableNames, tableName => () => schemaDatabaseService.dropTable( tableName ) )

    return sequence( tables )
}

function createTables () {
	let tables 			= []
	const tableNames 	= keys( schema )

	tables = map( tableNames, tableName => () => schemaDatabaseService.createTable( tableName, schema[ tableName ] ) )

  	return sequence( tables )
}

dropTables()
	.then( createTables )
	.then( () => Console.success( "Schema updated." ) )
	.catch( raiseError )
