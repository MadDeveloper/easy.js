#!/usr/bin/env node
'use strict';

var _execsql = require('execsql');

var _execsql2 = _interopRequireDefault(_execsql);

var _config = require('./../../config/config');

var _config2 = _interopRequireDefault(_config);

var _bootstrap = require('./../../bootstrap.js');

var _bootstrap2 = _interopRequireDefault(_bootstrap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var argv = minimist(process.argv.slice(2));
var cliMode = true;

var dbConfig = {
				host: _config2.default.database.connection.host,
				user: _config2.default.database.connection.user,
				password: _config2.default.database.connection.password
};

var app = new _bootstrap2.default(_config2.default, cliMode);
var kernel = app.kernel;
var bundleManager = app.bundleManager;
var container = bundleManager.container;
var message = container.getComponent('Message');

var titleError = "Error when importing database";
var consequenceError = "Importation aborted.";

var sql = 'use ' + _config2.default.database.connection.database + '';
var sqlFile = kernel.path.config + '/config/database/' + _config2.default.database.connection.database + '.sql';

function raiseError(err) {
				message.error({
								title: titleError,
								message: err,
								consequence: consequenceError,
								exit: 0
				});
}

_execsql2.default.config(dbConfig).exec(sql, function (err, results) {
				if (err) {
								raiseError(err);
				}
}).execFile(sqlFile, function (err, results) {
				if (err) {
								raiseError(err);
				} else {
								message.success("Database imported.", true);
				}
				process.exit();
});
