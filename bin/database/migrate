#!/usr/bin/env node
const { kernel, application }   = require( './../../src/bootstrap' )
const execsql                   = require( 'execsql' )
const schema					= require( 'src/config/database/schema' )
const sequence                  = require( 'when/sequence' )
const Console                   = require( 'easy/core/Console' )
const { indexOf,
		 has,
		 keys,
		 map }				    = require( 'lodash' )

const schemaDatabaseService	= container.get( 'database.schema' )

const titleError		= "Error when initializing roles and users"
const consequenceError	= "Initialization aborted."

function raiseError( error ) {
	Console.error({
		title: titleError,
		message: error,
		consequence: consequenceError,
		exit: 0
	})
}

function dropTables() {
    let tables 		= []
    let tableNames	= keys( schema )

    // we need to reverse tables schema, to delete in first table which contains fk and not the parents, otherwise error will occur because of fk.
    tableNames.reverse()
    tables = map( tableNames, tableName => () => schemaDatabaseService.dropTable( tableName ) )

    return sequence( tables )
}

function createTables () {
	let tables 			= []
	const tableNames 	= keys( schema )

	tables = map( tableNames, tableName => () => schemaDatabaseService.createTable( tableName, schema[ tableName ] ) )

  	return sequence( tables )
}

dropTables()
	.then( createTables )
	.then( () => Console.success( "Schema updated." ) )
	.catch( raiseError )
