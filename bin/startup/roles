#!/usr/bin/env node

var execsql     = require( 'execsql' );
var config      = require( __dirname + '/../../config/config' );
var schema		= require( __dirname + '/../../config/database/schema' );
var dbConfig    = {
	host: config.database.connection.host,
	user: config.database.connection.user,
	password: config.database.connection.password
};

var rolesTable = schema.roles;
var rolesToAppend = {
	admin: {
		id: 1,
		name: 'Administrator',
		slug: 'administrator'
	},

	user: {
		id: 2,
		name: 'User',
		slug: 'user'
	}
};

var usersTable = schema.users;
var usersToAppend = {
	admin: {
		id: 1,
		username: 'admin',
		email: 'admin@prepapp.com',
		password: 'K18necxhS4G;ur4', // http://randomkeygen.com/ -> Strong passwords
		role_id: rolesToAppend.admin.id
	},

	john: {
		id: 2,
		username: 'johndoe',
		email: 'john.doe@prepapp.com',
		password: '2Z7P97Y3o829gnr',
		role_id: rolesToAppend.user.id
	}
};

var sqlUse      = 'use ' + config.database.connection.database + ';';

/*
 * Roles part
 */
var sqlRoles    = 'insert into roles ';

var rolesTablePropertiesLength	= Object.keys( rolesTable ).length;
var currentRolesTableProperty	= 1;

sqlRoles += '(';
Object.keys( rolesTable ).forEach( function( column ) {
	sqlRoles += column;

	if ( currentRolesTableProperty++ < rolesTablePropertiesLength ) {
		sqlRoles += ', ';
	}
});
sqlRoles += ') values ';

var rolesLength = Object.keys( rolesToAppend ).length;
var currentRole = 1;
Object.keys( rolesToAppend ).forEach( function( role ) {
	var rolePropertiesLength 	= Object.keys( rolesToAppend[ role ] ).length;
	var currentRoleProperty		= 1;

	sqlRoles += '(';
	Object.keys( rolesToAppend[ role ] ).forEach( function( roleProperty ) {
		sqlRoles += ( typeof rolesToAppend[ role ][ roleProperty ] !== 'number' ) ? '"' + rolesToAppend[ role ][ roleProperty ] + '"' : rolesToAppend[ role ][ roleProperty ];

		if ( currentRoleProperty++ < rolePropertiesLength ) {
			sqlRoles += ', ';
		}
	});
	sqlRoles += ')';


	if ( currentRole++ < rolesLength ) {
		sqlRoles += ', ';
	} else {
		sqlRoles += ';';
	}
});


/*
 * Users part
 */
var sqlUsers    = 'insert into users ';

var usersTablePropertiesLength	= Object.keys( usersTable ).length;
var currentUsersTableProperty	= 1;

sqlUsers += '(';
Object.keys( usersTable ).forEach( function( column ) {
	sqlUsers += column;

	if ( currentUsersTableProperty++ < usersTablePropertiesLength ) {
		sqlUsers += ', ';
	}
});
sqlUsers += ') values ';

var usersLength = Object.keys( usersToAppend ).length;
var currentUser = 1;
Object.keys( usersToAppend ).forEach( function( user ) {
	var userPropertiesLength 	= Object.keys( usersToAppend[ user ] ).length;
	var currentUserProperty		= 1;

	sqlUsers += '(';
	Object.keys( usersToAppend[ user ] ).forEach( function( userProperty ) {
		sqlUsers += ( typeof usersToAppend[ user ][ userProperty ] !== 'number' ) ? '"' + usersToAppend[ user ][ userProperty ] + '"' : usersToAppend[ user ][ userProperty ];

		if ( currentUserProperty++ < userPropertiesLength ) {
			sqlUsers += ', ';
		}
	});
	sqlUsers += ')';


	if ( currentUser++ < usersLength ) {
		sqlUsers += ', ';
	} else {
		sqlUsers += ';';
	}
});

execsql.config( dbConfig )
	.exec( sqlUse, function( err, results ) {
        if ( err ) {
            console.log( err );
            process.exit();
        }
    })
	.exec( sqlRoles, function( err, results ) {
        if ( err ) {
            console.log( err );
            process.exit();
        }
	})
	.exec( sqlUsers, function( err, results ) {
        if ( err ) {
            console.log( err );
        } else {
            console.log( '---- Roles initialized ----' );
        }
        process.exit();
	});
