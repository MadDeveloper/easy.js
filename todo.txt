- créer un EntityManager permettant de getEntity() et getRepository(), accessible dans controller et factory, par défaut factory et controller en tant que shortcut ?
  regrouper dans Entity/ Entity, Repository et EntityManager

- régler soucis bin/startup (ER_ACCESS_DENIED)

- quand on crée un bundle le fichier schema.js ne se met pas à jour

- proposer d'activer le bundle dans bundlesDefinition dès qu'il est créé

- isRequestWellInitialized inutile de passer le request body vu que c'est un controller et bundleManager pour doesRequiredElementExists

- finir les tests pour user / role / skeleton

- finir les tests pour les services

- toJSON() de bookshelf et .json() de express semblent faire la même chose, donc inutile d'utiliser .toJSON() dans les controllers ?

- configurer les id des roles dans un fichier de conf pour les récupérer dans le service AccessSecurity

- code to show routes ?

- améliorer urlContains pour lui passer en paramètre un tableau de paths

- penser à utiliser methodNotAllowed pour les method sur les routes qui n'implémente pas cette dernière

- uniformiser controller et repository, ne pas mettre RoutingController et UserRepository ! Soit RoutingController et Repository ou soit UserRoutingController et UserRepository (préférable ?)

- retirer les factory de chaque bundle ? uniquement utiliser la factory easy ?

- enlever la réponse automatique du Controller easy, la rendre optionnelle ?

-- IMMINENT --
REDIGER LA DOC

--- LATER ---

- pouvoir reset le skeleton (dans bundles et test)

- appliquer le logger aux endroits utiles

- faire de l'injection de dépendances dans les contructeurs, par exemples les controlleurs leur envoyer request et response

- faire un config des services dispo et les paramètres à charger par le container quand on appelle notre service (cf. Container Symfo / Fabien Potencier)

- jsdoc for each class and functions
